# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

strategy:
  matrix:
    linux_3.6:
      imageName: 'ubuntu-latest'
      python.version: '3.6'
    linux_3.7:
      imageName: 'ubuntu-latest'
      python.version: '3.7'
    mac_3.6:
      imageName: 'macos-latest'
      python.version: '3.6'
    mac_3.7:
      imageName: 'macos-latest'
      python.version: '3.7'
    windows_3.6:
      imageName: 'windows-latest'
      python.version: '3.6'
    windows_3.7:
      imageName: 'windows-latest'
      python.version: '3.7'

pool:
  vmImage: $(imageName)

variables:
- name: projectName
  value: {{namespace}}
- name: projectDirectory
  value: {{rootdir}}
  
steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install .
  displayName: 'Install dependencies'

- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_staple.nii.gz -classes 0,1,2,4 -method staple 
    python -c "from Methods.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_staple.nii.gz', './data/test_staple.nii.gz'))) else print('pass')"
  displayName: 'Run through staple'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_itkvoting.nii.gz -classes 0,1,2,4 -method itkvoting 
    python -c "from Methods.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_itkvoting.nii.gz', './data/test_itkvoting.nii.gz'))) else print('pass')"
  displayName: 'Run through itkvoting'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_majorityvoting.nii.gz -classes 0,1,2,4 -method majorityvoting 
    python -c "from Methods.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_majorityvoting.nii.gz', './data/test_majorityvoting.nii.gz'))) else print('pass')"
  displayName: 'Run through majorityvoting'
  
- script: |
    python fusion_run -inputs ./data/unet.nii.gz,./data/resunet.nii.gz -output ./data/test_simple.nii.gz -classes 0,1,2,4 -method simple 
    python -c "from Methods.itkUtils import *; sys.exit('fail') if(not (imageComparision('./data/baseline_simple.nii.gz', './data/test_simple.nii.gz'))) else print('pass')"
  displayName: 'Run through simple'

- script: |
    python setup.py bdist_wheel
    twine upload dist/*
  workingDirectory: $(projectDirectory)
  displayName: Publish
  continueOnError: true
  env:
    TWINE_USERNAME: AIPlatform
    TWINE_PASSWORD: $(System.AccessToken)
    TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/FETS-AI/LabelFusion/_packaging/PublishArtifact/pypi/upload
  condition: succeeded()
